{
  "name": "factual-api",
  "description": "nodejs package for factual api",
  "keywords": [
    "factual",
    "geo",
    "lbs",
    "poi"
  ],
  "homepage": "https://github.com/Factual/factual-nodejs-driver",
  "bugs": "http://support.factual.com/factual",
  "author": {
    "name": "Leon Chen"
  },
  "version": "1.0.3",
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "directories": {
    "lib": "./lib",
    "example": "./examples"
  },
  "main": "factual-api",
  "bin": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/Factual/factual-nodejs-driver.git"
  },
  "dependencies": {
    "oauth": "0.9.7"
  },
  "readme": "# About\n\nThis is the Factual-supported Node.js driver for [Factual's public API](http://developer.factual.com).\n\n# Install\n\n```bash\n$ npm install factual-api\n```\n\n# Get Started\n\nInclude this driver in your projects:\n```javascript\nvar Factual = require('factual-api');\nvar factual = new Factual('YOUR_KEY', 'YOUR_SECRET');\n```\n\nIf you don't have a Factual API account yet, [it's free and easy to get one](https://www.factual.com/api-keys/request).\n\n## Read\n```javascript\n// Fulltext search doc:\n// http://developer.factual.com/display/docs/Core+API+-+Search+Filters\nfactual.get('/t/places',{q:\"starbucks\", \"include_count\":\"true\"}, function (error, res) {\n  console.log(\"show \"+ res.included_rows +\"/\"+ res.total_row_count +\" rows:\", res.data);\n});\n\n// Row Filters doc:\n// http://developer.factual.com/display/docs/Core+API+-+Row+Filters\nfactual.get('/t/places', {q:\"starbucks\", filters:{\"region\":\"CA\"}}, function (error, res) {\n  console.log(res.data);\n});\n\nfactual.get('/t/places', {q:\"starbucks\", filters:{\"$or\":[{\"region\":{\"$eq\":\"CA\"}},{\"locality\":\"newyork\"}]}}, function (error, res) {\n  console.log(res.data);\n});\n\n// Geo filter doc:\n// http://developer.factual.com/display/docs/Core+API+-+Geo+Filters\nfactual.get('/t/places', {q:\"starbucks\", geo:{\"$circle\":{\"$center\":[34.041195,-118.331518],\"$meters\":1000}}}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Schema\nFor schema, you only need to specify the table:\n```javascript\nfactual.get('/t/places/schema', function (error, res) {\n  console.log(res.view);\n});\n```\n\n## Facets\n```javascript\n// show top 5 cities that have more than 20 Starbucks in California\nfactual.get('/t/places/facets', {q:\"starbucks\", filters:{\"region\":\"CA\"}, select:\"locality\", \"min_count\":20, limit:5}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Crosswalk\nQuery with factual id, and only show entites from Yelp:\n```javascript\nfactual.get('/t/crosswalk?filters={\"factual_id\":\"57ddbca5-a669-4fcf-968f-a1c8210a479a\",\"namespace\":\"yelp\"}', function (error, res) {\n  console.log(res.data);\n});\n```\n\nOr query with an entity from Foursquare:\n```javascript\nfactual.get('/t/crosswalk?filters={\"namespace\":\"foursquare\", \"namespace_id\":\"4ae4df6df964a520019f21e3\"}', function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Resolve\nResolve the entity from name and address:\n```javascript\nfactual.get('/places/resolve', {values:{\"name\":\"huckleberry\",\"address\":\"1014 Wilshire Blvd\"}}, function (error, res) {\n  console.log(res.data);\n});\n```\nResolve from name and location\n```javascript\nfactual.get('/places/resolve', {values:{\"name\":\"huckleberry\",\"latitude\":34.023827,\"longitude\":-118.49251}}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Multi\nQuery read and facets in one request:\n```javascript\nvar readQuery = factual.requestUrl('/t/places', {q:\"starbucks\", geo:{\"$circle\":{\"$center\":[34.041195,-118.331518],\"$meters\":1000}}});\nvar facetsQuery = factual.requestUrl('/t/places/facets', {q:\"starbucks\", filters:{\"region\":\"CA\"}, select:\"locality\", \"min_count\":20, limit:5});\nfactual.get('/multi', {queries:{\n  read: readQuery,\n  facets: facetsQuery\n}}, function (error, res) {\n  console.log('read:', res.read.response);\n  console.log('facets:', res.facets.response);\n});\n```\nNote that sub-responses in multi's response object might be factual api's error responses.\n\n## Monetize\nUse fulltext search query to get deals about fried chicken in Los Angeles:\n```javascript\nfactual.get('/places/monetize', {q:\"Fried Chicken,Los Angeles\"}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Reverse Geocoder\nGet the nearest valid address from a latitude and longitude\n```javascript\nfactual.get('/places/geocode', {geo:{\"$point\":[34.06021,-118.41828]}}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Geopulse\nGet geographic attributes from a latitude and longitude\n```javascript\nfactual.get('/places/geopulse', {geo:{\"$point\":[34.06021,-118.41828]}}, function (error, res) {\n  console.log(res.data);\n});\n```\n\n## World Geographies\nWorld Geographies contains administrative geographies (states, counties, countries), natural geographies (rivers, oceans, continents), and assorted geographic miscallaney.  This resource is intended to complement the Global Places and add utility to any geo-related content.\n```javascript\nfactual.get('/t/world-geographies?select=neighbors&filters={\"factual_id\":{\"$eq\":\"08ca0f62-8f76-11e1-848f-cfd5bf3ef515\"}}', function (error, res) {\n  console.log(res.data);\n});\n```\n\n## Submit\n\nNOTICE: _Server support for this feature is still under development._ You are getting a preview of how this driver will support the feature. If you try using this feature now, you may not get a successful response. We will remove this notice once the feature is fully supported.\n---\n\n```javascript\nfactual.post('/t/global/submit', {\n  values: JSON.stringify({\n    name: \"Factual North\",\n    address: \"1 North Pole\",\n    latitude: 90,\n    longitude: 0\n  }),\n  user: \"a_user_id\"\n}, function (error, res) {\n  console.log(res);\n});\n```\n\n## Diffs\n\nNOTICE: _Server support for this feature is still under development._ You are getting a preview of how this driver will support the feature. If you try using this feature now, you may not get a successful response. We will remove this notice once the feature is fully supported.\n---\n\n```javascript\n// callback to handle all the diffs\nvar now = new Date().getTime();\nvar start = now - 7*24*3600*1000; // last week\nfactual.get('/t/global/diffs?start='+start+'&end='+now, function (err, res) {\n  console.log(res);\n});\n\n\n// callback to handle each diff\nfactual.get('/t/global/diffs?start='+start+'&end='+now, {\n  customCallback: function (req) {\n\n    req.on('response', function (response) {\n      var data = \"\";\n\n      var cb = function () {\n        var idx;\n        while (-1 != (idx = data.indexOf(\"\\n\"))) {\n          var row = data.slice(0, idx);\n          data = data.slice(idx + 1);\n          if (row.length > 2) console.log(JSON.parse(row));\n        }\n      };\n\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data += chunk.toString();\n        cb();\n      });\n      response.on('end', function () {\n        if (data) cb();\n      });\n      response.on('close', function () {\n        if (data) cb();\n      });\n      response.on('error', function (error) {\n        console.log(error);\n      });\n    });\n\n    req.end();\n  }\n});\n```\n\n## Flag\n\nNOTICE: _Server support for this feature is still under development._ You are getting a preview of how this driver will support the feature. If you try using this feature now, you may not get a successful response. We will remove this notice once the feature is fully supported.\n---\n\n```javascript\nfactual.post('/t/global/21EC2020-3AEA-1069-A2DD-08002B30309D/flag', {\n  problem: \"duplicate\",\n  user: \"a_user_id\",\n  comment: \"I think this is identical to 9d676355-6c74-4cf6-8c4a-03fdaaa2d66a\"\n}, function (error, res) {\n  if (!error) console.log(\"success\");\n});\n```\n\n\n\n## Error Handling\nThe error object is the first argument of the callback functions, it will be null if no errors.\n\n## Debug Mode\nTo see detailed debug information at runtime, you can turn on Debug Mode:\n\n```javascript\n// start debug mode\nfactual.startDebug();\n\n// run your querie(s)\n\n// stop debug mode\nfactual.stopDebug();\n```\n\n## Change base url\nIf you want to send the requests to other hosts/port instead of \"http://api.v3.factual.com:80\", you can set it manually:\n```javascript\n// 1.set globally\nfactual.setBaseURI('http://dev.api.v3.factual.com');\n// back to default\nfactual.setBaseURI();\n// 2. set for each request\nfactual.get('http://dev.api.v3.factual.com/t/places',{q:\"starbucks\", \"include_count\":\"true\"}, function (error, res) {\n});\n```\n\n\nDebug Mode will output useful information about what's going on, including  the request sent to Factual and the response from Factual, outputting to stdout and stderr.\n\n# Where to Get Help\n\nIf you think you've identified a specific bug in this driver, please file an issue in the github repo. Please be as specific as you can, including:\n\n  * What you did to surface the bug\n  * What you expected to happen\n  * What actually happened\n  * Detailed stack trace and/or line numbers\n\nIf you are having any other kind of issue, such as unexpected data or strange behaviour from Factual's API (or you're just not sure WHAT'S going on), please contact us through [GetSatisfaction](http://support.factual.com/factual).\n",
  "_id": "factual-api@1.0.3",
  "dist": {
    "shasum": "54dea41c5fe86b738dbd64389bf5bdd7a499cd34"
  },
  "_from": "factual-api"
}
